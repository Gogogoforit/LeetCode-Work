//https://leetcode.com/problems/keyboard-row/?tab=Description
//大体思想是，三个集合分别用三个二进制数字代表，100,010,001, 每一步不断并起来，一旦结果为0，就说明不可，反之可以。。
//但是有点写不下去了，先这样。
/**
 * Return an array of size *returnSize.
 * Note: The returned array must be malloced, assume caller calls free().
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char** findWords(char** words, int wordsSize, int* returnSize) {
    char a[20]={ 'q','Q','w','W','e','E','r','R','t','T','y','Y','u','U','i','I','o','O','p','P' };
    char b[18]={ 'a','A','s','S','d','D','f','F','g','G','h','H','j','J','k','K','l','L'};
    char c[14]={ 'z','Z','x','X','c','C','v','V','b','B','n','N','m','M'};
    int *pWordNum;
    int WordCount = 0;
    char **pRetWords;
    int flag = -1;
    int result;
    int i;

    pWordNum = (int *)malloc(wordsSize * sizeof(int));
    memset(pWordNum, 0, wordsSize * sizeof(int));
    
    for(int i = 0; i < wordsSize; i++)
    {
        if(strchr(a, words[i][0]) != NULL)
            {
            flag = 1;
            result = result & flag;
            }
        else if(strchr(b, words[i][0]) != NULL)
            {
            flag = 2;
            result = result & flag;
            }
        else if(strchr(c, words[i][0]) != NULL)
         {
            flag = 4;
            result = result & flag;
            }
    }
    if(result != 0)
        
    
    
    
}
